<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!--这是一个父模块，由于父模块和聚合模块可以整合到一个pom中，所以这个模块其实时没有用处了，但是当初学习时既然创建了那么就保留着吧，可以发现在聚合中有和这个pom相同的配置-->

  <groupId>com.dhf.mvn.account</groupId>
  <artifactId>account-parent</artifactId>
  <version>1.0-SNAPSHOT</version>
  <!-- 父模块packaging必须为pom，由于父模块目的是消除各个模块之间pom的重复配置，所以只需要这一个pom文件就行了 -->
  <packaging>pom</packaging>
  <name>account-parent</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <springframework.version>2.5.6</springframework.version>
  </properties>

  <!--如果直接在父模块的pom中使用dependencies，会导致所有子模块都会依赖指定的dependency，所以就需要用到dependencyManagement了
  dependencyManagement的作用是，即使在父模块中声明了dependencies，子模块也不会依赖这些dependency，只有在子模块在的dependencies中再
  声明这些dependency才表示这个自模块需要这个依赖，而子模块声明时dependency只需要写groupId和artifactId，不需要version和scope等这些在父模块证明的信息了-->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${springframework.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.7</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- 和dependencyManagement道理一样 -->
    <pluginManagement>
      <plugins>
        <!--跳过测试，由于是官方plugin，可以省略groupId-->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
      <!--生成源码jar-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
          <executions>
            <execution>
              <id>attach-source</id>
              <phase>verify</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!--使用JDK8编译-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

</project>
